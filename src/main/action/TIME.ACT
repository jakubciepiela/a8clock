INCLUDE "D2:CONSOLE.ACT"
INCLUDE "D8:DIV24.ACT"
INCLUDE "D8:GR0.ACT"
INCLUDE "D8:FACE.ACT"

MODULE
byte lastHours, lastMinutes, lastSeconds

BYTE activeLoop
BYTE PalOrNtscFlag = 53258


BYTE FUNC IsPal()
  IF PalOrNtscFlag=1 THEN
    RETURN (1)
  ELSE 
    RETURN (0)
  FI
RETURN (0)

PROC InitTime()
  PrintE("Time lib initialized")
  lastHours = 0
  lastMinutes = 0
  lastSeconds = 0
; checks if the system is PAL or NTSC
; it sets the calculation logic acordingly
RETURN

proc showTime(byte hours, minutes, seconds)
  IF hours<>lastHours OR minutes<>lastMinutes OR seconds<>lastSeconds THEN
    lastHours = hours
    lastMinutes = minutes
    lastSeconds = seconds

    Print("TS= ")
    IF hours<10 THEN
      Print("0")
    FI  
    PrintB(hours)
    Print(":")

    IF minutes<10 THEN
      Print("0")
    FI
    PrintB(minutes)
    Print(":")
    IF seconds<10 THEN
      Print("0")
    FI
    PrintB(seconds)

    PrintE("")
  FI
RETURN

PROC timeHHMMSS()
  BYTE lo=20, mid=19, hi=18
  Div24IO dataIO ; result will hold seconds from start
  Div24IO dIOSec ; seconds
  Div24IO dIOMin ; minutes
  Div24IO dIOHrs ; hours
  byte hours, minutes, seconds

    dataIO.dividendH = hi
    dataIO.dividendM = mid
    dataIO.dividendL = lo

    dataIO.divisorH = 0
    dataIO.divisorM = 0
    dataIO.divisorL = 60

    Div24(dataIO)

    dIOSec.dividendH = dataIO.resultH
    dIOSec.dividendM = dataIO.resultM
    dIOSec.dividendL = dataIO.resultL
    dIOSec.divisorH = 0
    dIOSec.divisorM = 0
    dIOSec.divisorL = 60
    Div24(dIOSec)

    dIOMin.dividendH = dIOSec.resultH
    dIOMin.dividendM = dIOSec.resultM
    dIOMin.dividendL = dIOSec.resultL
    dIOMin.divisorH = 0
    dIOMin.divisorM = 0
    dIOMin.divisorL = 60
    Div24(dIOMin)

    dIOHrs.dividendH = dIOMin.resultH
    dIOHrs.dividendM = dIOMin.resultM
    dIOHrs.dividendL = dIOMin.resultL
    dIOHrs.divisorH = 0
    dIOHrs.divisorM = 0
    dIOHrs.divisorL = 60
    Div24(dIOHrs)

    hours = dIOHrs.reminderL
    minutes = dIOMin.reminderL
    seconds = dIOSec.reminderL
    showTime(hours, minutes, seconds)
RETURN

PROC DoOption()
  activeLoop=0
return

;to stop - press Option key
PROC TimeTest()
  CARD i
  INITCONSOLE()
  Option=DoOption
  InitTime()
  InitWatcFace()
  PrintE("Press Option to stop.")
  activeLoop=1
  WHILE activeLoop<>0
    DO
      timeHHMMSS()
    OD
RETURN

;that is the end