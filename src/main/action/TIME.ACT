INCLUDE "D2:CONSOLE.ACT"
INCLUDE "D8:DIV24.ACT"

MODULE

BYTE activeLoop
BYTE PalOrNtscFlag = 53258


BYTE FUNC IsPal()
  IF PalOrNtscFlag=1 THEN
    RETURN (1)
  ELSE 
    RETURN (0)
  FI
RETURN (0)

PROC InitTime()
  PrintE("Time lib initialized")
; checks if the system is PAL or NTSC
; it sets the calculation logic acordingly
RETURN

PROC timeHHMMSS()
  BYTE lo=20, mid=19, hi=18
  Div24IO dataIO ; result will hold seconds from start
  Div24IO dIOSec ; seconds
  Div24IO dIOMin ; minutes
  Div24IO dIOHrs ; hours

    dataIO.dividendH = hi
    dataIO.dividendM = mid
    dataIO.dividendL = lo

    dataIO.divisorH = 0
    dataIO.divisorM = 0
    dataIO.divisorL = 60

  Div24(dataIO)

    dIOSec.dividendH = dataIO.resultH
    dIOSec.dividendM = dataIO.resultM
    dIOSec.dividendL = dataIO.resultL
    dIOSec.divisorH = 0
    dIOSec.divisorM = 0
    dIOSec.divisorL = 60
Div24(dIOSec)

    dIOMin.dividendH = dIOSec.resultH
    dIOMin.dividendM = dIOSec.resultM
    dIOMin.dividendL = dIOSec.resultL
    dIOMin.divisorH = 0
    dIOMin.divisorM = 0
    dIOMin.divisorL = 60
Div24(dIOMin)

    dIOHrs.dividendH = dIOMin.resultH
    dIOHrs.dividendM = dIOMin.resultM
    dIOHrs.dividendL = dIOMin.resultL
    dIOHrs.divisorH = 0
    dIOHrs.divisorM = 0
    dIOHrs.divisorL = 60
Div24(dIOHrs)


  ; Print("T:")
  ; PrintB(lo)
  ; Print(",")
  ; PrintB(mid)
  ; Print(",")
  ; PrintB(hi)

  ; Print(" R0:")
  ; PrintB(dataIO.resultL)
  ; Print(",")
  ; PrintB(dataIO.resultM)
  ; Print(",")
  ; PrintB(dataIO.resultH)
  ; Print("/")
  ; PrintB(dataIO.reminderL)
  ; Print(",")
  ; PrintB(dataIO.reminderM)
  ; Print(",")
  ; PrintB(dataIO.reminderH)

  ; Print(" R1:")
  ; PrintB(dIOSec.resultL)
  ; Print(",")
  ; PrintB(dIOSec.resultM)
  ; Print(",")
  ; PrintB(dIOSec.resultH)
  ; Print("/")
  ; PrintB(dIOSec.reminderL)
  ; Print(",")
  ; PrintB(dIOSec.reminderM)
  ; Print(",")
  ; PrintB(dIOSec.reminderH)

  Print("TS= ")
  PrintB(dIOHrs.reminderL)
  Print(":")
  PrintB(dIOMin.reminderL)
  Print(":")
  PrintB(dIOSec.reminderL)

  PrintE("")



RETURN

PROC DoOption()
  activeLoop=0
return

;to stop - press Option key
PROC TimeTest()
  CARD i
  INITCONSOLE()
  Option=DoOption
  InitTime()

  activeLoop=1
  WHILE activeLoop<>0
    DO
      timeHHMMSS()
    OD
RETURN